t5 <- data.frame(d_i = c(1,0,1), a_i=c(1,0,1), alive = c(2,0,2))
rownames(t5) <- c("Group A","Group B", "Total")
#ei function
ei <- function (x) {
x[3,1]*(x[1,3]/x[3,3])
}
#vi function
vi <- function (x) {
(x[3,1]*(x[1,3]/x[3,3])) * ((x[3,3]-x[3,2])/x[3,3]) * ((x[3,3]-x[3,1])/(x[3,3]-1))
}
#di function
di <- function (x) {
x[1,1]
}
di_sum <- sum(di(t1),di(t2),di(t3),di(t4),di(t5)) #sum of all di's
ei_sum <- sum(ei(t1),ei(t2),ei(t3),ei(t4),ei(t5)) #sum of all ei's
vi_sum <- sum(vi(t1),vi(t2),vi(t3),vi(t4),vi(t5)) #sum of all vi's
ui <- function(x) {
x[1,3] - ei(x)  # d_ix - eix
}
lgr <- sum(ui(t1),ui(t2), ui(t3), ui(t4), ui(t5)) # sum of u_i from all events
logr <- ((di_sum - ei_sum)^2)/vi_sum #sum of u_i from all events squared, divided by the sum of all variances at each event
logr
1-pchisq(logr,1)
#3x3 tables of each event time
#t=10
t1 <- data.frame(d_i=c(0,1,1),a_i=c(7,5,12), alive=c(7,6,13))
rownames(t1) <- c("Drug A","Drug B", "Totals")
#t=14
t2 <- data.frame(d_i=c(0,1,1),a_i=c(7,4,11), alive=c(7,5,12))
rownames(t2) <- c("Drug A","Drug B", "Totals")
#t=15
t3 <- data.frame(d_i=c(0,1,1),a_i=c(7,3,10), alive = c(7,4,11))
rownames(t3) <- c("Drug A","Drug B", "Totals")
#t=16
t4 <- data.frame(d_i=c(1,0,1),a_i=c(5,3,8), alive = c(6,3,9))
rownames(t4) <- c("Drug A","Drug B", "Totals")
#t=18
t5 <- data.frame(d_i=c(0,1,1),a_i=c(4,2,6), alive = c(4,3,7))
rownames(t2) <- c("Drug A","Drug B", "Totals")
#t=20
t6 <- data.frame(d_i=c(1,0,1),a_i=c(2,1,3), alive = c(3,1, 4))
rownames(t3) <- c("Drug A","Drug B", "Totals")
#t=21
t7 <- data.frame(d_i=c(0,1,1),a_i=c(2,0,1), alive = c(2,1,2))
rownames(t4) <- c("Drug A","Drug B", "Totals")
#t=28
t8 <- data.frame(d_i=c(1,0,1),a_i=c(1,0,1),alive = c(2, 0, 2))
rownames(t4) <- c("Drug A","Drug B", "Totals")
di <- function (x) {
x[1,1]
}
di_sum <- sum(di(t1),di(t2),di(t3),di(t4),di(t5),di(t6),di(t7),di(t8))
ei_sum <- sum(ei(t1),ei(t2),ei(t3),ei(t4),ei(t5),ei(t6),ei(t7),ei(t8))
vi_sum <- sum(vi(t1),vi(t2),vi(t3),vi(t4),vi(t5),vi(t6),vi(t7),vi(t8))
lgr <- sum(ui(t1),ui(t2), ui(t3), ui(t4), ui(t5), ui(t6), ui(t7), ui(t8)) # sum of u_i from all events
logr <- ((di_sum - ei_sum)^2)/vi_sum #sum of u_i from all events squared, divided by the sum of all variances at each event
logr
1-pchisq(logr,1)
ploidy <- read.csv('tongue.csv')
library(survival)
library(survminer)
censored <- Surv(ploidy$time, ploidy$type)
fit1 <- survfit(Surv(time, type) ~ delta, data = ploity)
library(survival)
library(survminer)
censored <- Surv(ploidy$time, ploidy$type)
fit1 <- survfit(Surv(time, type) ~ delta, data = ploidy)
ggsurvplot(fit = fit1, data = ploidy, conf.int = FALSE)
knitr::opts_chunk$set(echo = TRUE)
ggsurvplot(fit = fit1, data = ploidy, conf.int = TRUE)
library(survival)
library(survminer)
censored <- Surv(ploidy$time, ploidy$type)
fit1 <- survfit(Surv(time, type) ~ delta, data = ploidy)
ggsurvplot(fit = fit1, data = ploidy, conf.int = TRUE)
library(survival)
library(survminer)
censored <- Surv(ploidy$time, ploidy$type)
fit1 <- survfit(Surv(time, type) ~ delta, data = ploidy)
ggsurvplot(fit = fit1, data = ploidy, conf.int = FALSE)
logrank<-survdiff(Surv(time, type) ~ delta, data = ploidy)
logrank
peto<-survdiff(Surv(time, type) ~ delta, rho=1, data = ploidy)
peto
smoking <- read.csv('pharmacoSmoking.csv')
smoking <- read.csv('pharmacoSmoking-new.csv')
knitr::opts_chunk$set(echo = T, warning = F, message = F,
fig.align = "center",
fig.width = 6, fig.height = 4)
logrank<-survdiff(Surv(dur, status) ~ trt, data = myel)
logrank
peto<-survdiff(Surv(dur, status) ~ trt, rho=1, data = myel)
peto
library(survival)
library(survminer)
censored <- Surv(myel$dur, myel$status)
fit1 <- survfit(Surv(dur, status) ~ trt, data = myel)
ggsurvplot(fit = fit1, data = myel, conf.int = FALSE)
library(dplyr)
smoking$Admitdate <- smoking$Admitdate %>% strsplit(split = ' ') %>%
sapply(function(l) l[1]) %>% as.Date(format = c("%m/%d/%y"))
library(dplyr)
Smoking$admitdate <- strptime(Smoking$admitdate, format = "%m/%d/%y")
library(dplyr)
smoking$admitdate <- strptime(smoking$admitdate, format = "%m/%d/%y")
smoking$fdate <- strptime(smoking$fdate, format = "%m/%d/%y")
smoking$admitdate <- as.Date(smoking$admitdate)
smoking$fdate <- as.Date(smoking$fdate)
smoking$time <- as.numeric(smoking$fdate - smoking$admitdate)
library("survMisc")
fit2 <- survfit(Surv(Time_month, Censor) ~ Group, data = x)
comp(ten(fit2))
ggsurvplot(fit2, data = x, conf.int = TRUE)
library("survMisc")
fit2 <- survfit(Surv(time, relapses) ~ grp, data = smoking)
library("survMisc")
fit2 <- survfit(Surv(time, relapse) ~ grp, data = smoking)
comp(ten(fit2))
ggsurvplot(fit2, data = smoking, conf.int = TRUE)
#sorting data by four groups of interest
library(dyplr)
#sorting data by four groups of interest
library(dplyr)
smokingf %>% filter(gender == 0)
sfcom <- smoking %>% filter(gender == 0)
sfcom <- sf %>% filter(grp == 1)
sf <- smoking %>% filter(gender == 0)
sfcom <- sf %>% filter(grp == 1)
sfpat <- sf %>% filter(grp ==0)
sm <- smoking %>% filter(gender ==1)
smcom <- sm %>% filter(grp ==1)
smpat <- sf %>% filter(grp==0)
View(sf)
#females
sf <- smoking %>% filter(gender == 0)
sfcom <- sf %>% filter(grp == 1)
sfpat <- sf %>% filter(grp ==2)
sm <- smoking %>% filter(gender ==1)
smcom <- sm %>% filter(grp ==1)
smpat <- sf %>% filter(grp==2)
smpat <- sm %>% filter(grp==2)
f1m2f2m2 <- data.frame(sfcom,sfpat)
#sorting data by four groups of interest
library(dplyr)
#females
sf <- smoking %>% filter(gender == 0)
sfcom <- sf %>% filter(grp == 1)
sfpat <- sf %>% filter(grp ==2)
#males
sm <- smoking %>% filter(gender ==1)
smcom <- sm %>% filter(grp ==1)
smpat <- sm %>% filter(grp==2)
library("survMisc")
fitf <- survfit(Surv(time, relapse) ~ grp, data = sf)
comp(ten(fitf))
ggsurvplot(fitf, data = smoking, conf.int = TRUE)
library("survMisc")
fitf <- survfit(Surv(time, relapse) ~ grp, data = sf)
comp(ten(fitf))
ggsurvplot(fitf, data = sf, conf.int = TRUE)
#male fit
fitm <- survfit(Surv(time, relapse) ~ grp, data = sm)
comp(ten(fitm))
fitm <- survfit(Surv(time, relapse) ~ grp, data = sm)
comp(ten(fitm))
ggsurvplot(fitm, data = sm, conf.int = TRUE)
fitcom <- list(fitf, fitm)
ggsurvplot_combine(fitcom, smoking)
ggsurvplot_combine(fitcom, smoking, conf.int = TRUE)
#sorting data by four groups of interest
library(dplyr)
#females
sf <- smoking %>% filter(gender == 0)
#males
sm <- smoking %>% filter(gender ==1)
library("survMisc")
#female fit
fitf <- survfit(Surv(time, relapse) ~ grp, data = sf)
#comp(ten(fitf))
#male fit
fitm <- survfit(Surv(time, relapse) ~ grp, data = sm)
#comp(ten(fitm))
fitcom <- list(fitf, fitm)
ggsurvplot_combine(fitcom, smoking, conf.int = TRUE)
comp(ten(fitf))
comp(ten(fitcom))
library("survMisc")
fit2 <- survfit(Surv(Time_month, Censor, Drug) ~ Group, data = x)
fit2 <- survfit(Surv(Time_month, Censor) ~ Group, Drug, data = x)
comp(ten(fit2))
ggsurvplot(fit2, data = x, conf.int = TRUE)
library("survMisc")
fit2 <- survfit(Surv(Time_month, Censor) ~ Group, data = x)
comp(ten(fit2))
ggsurvplot(fit2, data = x, conf.int = TRUE)
smoking %>% mutate(z = case_when(
gender==0 & grp ==1 ~ "F1",
gender==0 & grp ==2 ~ "F2",
gender==1 & grp ==1 ~ "M1",
gender==1 & grp ==2 ~ "M2"
))
smoking %>% mutate(z = case_when(
gender==0 & grp ==1 ~ "F1",
gender==0 & grp ==2 ~ "F2",
gender==1 & grp ==1 ~ "M1",
gender==1 & grp ==2 ~ "M2"
))
smoking %>% mutate(z = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==2 ~ "F2",
gender==1 & grp==1 ~ "M1",
gender==1 & grp==2 ~ "M2"
)
)
smoking$z
smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==2 ~ "F2",
gender==1 & grp==1 ~ "M1",
gender==1 & grp==2 ~ "M2"
)
)
library(mosaic)
install.packages('mosaic')
install.packages('mosaic')
library(mosaic)
smoking <- mutate(smoking, z = derivedFactor(
"apple" = (gender==0 & grp==1),
"ball" = (gender==0 & grp==1),
"pine" = (gender==1 & grp==1),
"orange" = (gender==1 & grp==2),
method ="first",
.default = NA
))
library(mosaic)
smoking <- mutate(smoking, z = derivedFactor(
"apple" = (gender==0 & grp==1),
"ball" = (gender==0 & grp==1),
"pine" = (gender==1 & grp==1),
"orange" = (gender==1 & grp==2),
method ="first",
.default = NA
))
library(mosaic)
smoking <- mutate(smoking, z = derivedFactor(
"apple" = (gender==0 & grp==1),
"ball" = (gender==0 & grp==1),
"pine" = (gender==1 & grp==1),
"orange" = (gender==1 & grp==2),
method ="last",
.default = NA
))
df %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==1, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange', NA))))
)
smoking %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==1, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange', NA))))
)
smoking$z %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==1, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange', NA))))
)
smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==1 ~ "F2",
gender==1 & grp==2 ~ "M1",
gender==1 & grp==2 ~ "M2"
)
)
smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==1 ~ "F2",
gender==1 & grp==2 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
smoking %>% mutate(grps = case_when(
gender==0 and grp==1 ~ "F1",
smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==1 ~ "F2",
gender==1 & grp==2 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
smoking %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==2, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange', NA))))
)
smoking %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==2, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange'))))
)
smoking %>% mutate(z = ifelse(gender==0 & grp==1, 'apple',
ifelse(gender==0 & grp==2, 'ball',
ifelse(gender==1 & grp==1, 'pine',
ifelse(gender==1 & grp==2, 'orange', NA))))
)
#sorting data by four groups of interest
library(dplyr)
smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==1 ~ "F2",
gender==1 & grp==2 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
smoking <- smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==1 ~ "F2",
gender==1 & grp==2 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
smoking <- smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==2 ~ "F2",
gender==1 & grp==1 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
#male fit
fitm <- survfit(Surv(time, relapse) ~ grps, data = smoking)
fit2 <- survfit(Surv(Time_month, relapse) ~ grps, data = smoking)
fit2 <- survfit(Surv(time, relapse) ~ grps, data = smoking)
comp(ten(fit2))
ggsurvplot(fit2, data = smoking, conf.int = TRUE)
comp(ten(fit2))
pairwise_survdiff(Surv(time, relapse) ~ grps, data = smoking, p.adjust.method = "bonferroni" )
pairwise_survdiff(Surv(Time_month, Censor) ~ Group, data = x, p.adjust.method = "bonferroni" )
comp(ten(fit2))
#sorting data by four groups of interest
library(dplyr)
#adding a new column based on the 4 groups
smoking <- smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==2 ~ "F2",
gender==1 & grp==1 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
smoking <- read.csv('pharmacoSmoking-new.csv')
smoking$admitdate <- strptime(smoking$admitdate, format = "%m/%d/%y")
smoking$fdate <- strptime(smoking$fdate, format = "%m/%d/%y")
smoking$admitdate <- as.Date(smoking$admitdate)
smoking$fdate <- as.Date(smoking$fdate)
smoking$time <- as.numeric(smoking$fdate - smoking$admitdate)
knitr::opts_chunk$set(echo = TRUE)
#dataframe of groups
remData <- data.frame(Group_A = c(23, 16, 18, 20, 24), Group_B = c(15,18,19,19,20))
#2x2 tables of each event time
#t=15
t1 <- data.frame(d_i=c(0,1),a_i=c(5,4))
rownames(t1) <- c("Group A","Group B")
#t=18
t2 <- data.frame(d_i=c(0,1),a_i=c(5,3))
rownames(t2) <- c("Group A","Group B")
#t=19
t3 <- data.frame(d_i=c(0,2),a_i=c(5,1))
rownames(t3) <- c("Group A","Group B")
#t=20
t4 <- data.frame(d_i=c(0,1),a_i=c(5,0))
rownames(t4) <- c("Group A","Group B")
#t=23
t5 <- data.frame(d_i=c(1,0),a_i=c(4,0))
rownames(t5) <- c("Group A","Group B")
#changing these 2x2 tables to 3x3 tables because we need totals and number alive to calculate ei and vi
#t=15
t1 <- data.frame(d_i = c(0,1,1), a_i=c(5,4,9), alive = c(5,5,10))
rownames(t1) <- c("Group A","Group B", "Total")
#t=18
t2 <- data.frame(d_i=c(0,1,1),a_i=c(3,3,6), alive = c(3,4,7))
rownames(t2) <- c("Group A","Group B", "Total")
#t=19
t3 <- data.frame(d_i=c(0,2,2),a_i=c(3,1,4), alive = c(3,3,6))
rownames(t3) <- c("Group A","Group B", "Total")
#t=20
t4 <- data.frame(d_i = c(0,1,1), a_i=c(2,0,2), alive = c(2,1,3))
rownames(t4) <- c("Group A","Group B", "Total")
#t=23
t5 <- data.frame(d_i = c(1,0,1), a_i=c(1,0,1), alive = c(2,0,2))
rownames(t5) <- c("Group A","Group B", "Total")
#ei function
ei <- function (x) {
x[3,1]*(x[1,3]/x[3,3])
}
#vi function
vi <- function (x) {
(x[3,1]*(x[1,3]/x[3,3])) * ((x[3,3]-x[3,2])/x[3,3]) * ((x[3,3]-x[3,1])/(x[3,3]-1))
}
#di function
di <- function (x) {
x[1,1]
}
di_sum <- sum(di(t1),di(t2),di(t3),di(t4),di(t5)) #sum of all di's
ei_sum <- sum(ei(t1),ei(t2),ei(t3),ei(t4),ei(t5)) #sum of all ei's
vi_sum <- sum(vi(t1),vi(t2),vi(t3),vi(t4),vi(t5)) #sum of all vi's
logr <- ((di_sum - ei_sum)^2)/vi_sum #sum of u_i from all events squared, divided by the sum of all variances at each event
logr
1-pchisq(logr,1)
#3x3 tables of each event time
#t=10
t1 <- data.frame(d_i=c(0,1,1),a_i=c(7,5,12), alive=c(7,6,13))
rownames(t1) <- c("Drug A","Drug B", "Totals")
#t=14
t2 <- data.frame(d_i=c(0,1,1),a_i=c(7,4,11), alive=c(7,5,12))
rownames(t2) <- c("Drug A","Drug B", "Totals")
#t=15
t3 <- data.frame(d_i=c(0,1,1),a_i=c(7,3,10), alive = c(7,4,11))
rownames(t3) <- c("Drug A","Drug B", "Totals")
#t=16
t4 <- data.frame(d_i=c(1,0,1),a_i=c(5,3,8), alive = c(6,3,9))
rownames(t4) <- c("Drug A","Drug B", "Totals")
#t=18
t5 <- data.frame(d_i=c(0,1,1),a_i=c(4,2,6), alive = c(4,3,7))
rownames(t2) <- c("Drug A","Drug B", "Totals")
#t=20
t6 <- data.frame(d_i=c(1,0,1),a_i=c(2,1,3), alive = c(3,1, 4))
rownames(t3) <- c("Drug A","Drug B", "Totals")
#t=21
t7 <- data.frame(d_i=c(0,1,1),a_i=c(2,0,1), alive = c(2,1,2))
rownames(t4) <- c("Drug A","Drug B", "Totals")
#t=28
t8 <- data.frame(d_i=c(1,0,1),a_i=c(1,0,1),alive = c(2, 0, 2))
rownames(t4) <- c("Drug A","Drug B", "Totals")
di <- function (x) {
x[1,1]
}
di_sum <- sum(di(t1),di(t2),di(t3),di(t4),di(t5),di(t6),di(t7),di(t8))
ei_sum <- sum(ei(t1),ei(t2),ei(t3),ei(t4),ei(t5),ei(t6),ei(t7),ei(t8))
vi_sum <- sum(vi(t1),vi(t2),vi(t3),vi(t4),vi(t5),vi(t6),vi(t7),vi(t8))
logr <- ((di_sum - ei_sum)^2)/vi_sum #sum of u_i from all events squared, divided by the sum of all variances at each event
logr
1-pchisq(logr,1)
ploidy <- read.csv('tongue.csv')
library(survival)
library(survminer)
censored <- Surv(ploidy$time, ploidy$type)
fit1 <- survfit(Surv(time, type) ~ delta, data = ploidy)
ggsurvplot(fit = fit1, data = ploidy, conf.int = FALSE)
logrank<-survdiff(Surv(time, type) ~ delta, data = ploidy)
logrank
peto<-survdiff(Surv(time, type) ~ delta, rho=1, data = ploidy)
peto
smoking <- read.csv('pharmacoSmoking-new.csv')
smoking$admitdate <- strptime(smoking$admitdate, format = "%m/%d/%y")
smoking$fdate <- strptime(smoking$fdate, format = "%m/%d/%y")
smoking$admitdate <- as.Date(smoking$admitdate)
smoking$fdate <- as.Date(smoking$fdate)
smoking$time <- as.numeric(smoking$fdate - smoking$admitdate)
#sorting data by four groups of interest
library(dplyr)
#adding a new column based on the 4 groups
smoking <- smoking %>% mutate(grps = case_when(
gender==0 & grp==1 ~ "F1",
gender==0 & grp==2 ~ "F2",
gender==1 & grp==1 ~ "M1",
gender==1 & grp==2 ~ "M2",
TRUE ~ "none"
)
)
fit2 <- survfit(Surv(time, relapse) ~ grps, data = smoking)
ggsurvplot(fit2, data = smoking, conf.int = TRUE)
comp(ten(fit2))
pairwise_survdiff(Surv(time, relapse) ~ grps, data = smoking, p.adjust.method = "bonferroni" )
install.packages("rmarkdown", type = "source")
install.packages("rmarkdown", type = "source")
touch _site.yml #"YML" file that tells your website how to assemble itself
library(rmarkdown)
touch _site.yml #"YML" file that tells your website how to assemble itself
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:\Users\tlt23\OneDrive - Oregon State University\Documents\GitHub\tashina.github.io")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/tlt23/OneDrive - Oregon State University/Documents/GitHub/tashina.github.io")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/tlt23/Basalty/tashina.github.io")
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("C:/Users/tlt23/tashina")
#render your sweet site.
rmarkdown::render_site()
